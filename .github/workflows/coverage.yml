name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

# Cancel previous runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  VITE_APP_ENVIRONMENT: test

jobs:
  coverage:
    name: Generate Coverage Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          CI: true
      
      - name: Generate coverage summary
        run: |
          mkdir -p coverage
          node -e "
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
            const summary = {
              statements: coverage.total.statements.pct,
              branches: coverage.total.branches.pct,
              functions: coverage.total.functions.pct,
              lines: coverage.total.lines.pct
            };
            fs.writeFileSync('coverage/coverage-summary.json', JSON.stringify(summary, null, 2));
            console.log('Coverage Summary:', summary);
          "
      
      - name: Upload coverage summary artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-summary
          path: coverage/coverage-summary.json
          retention-days: 30
      
      - name: Upload full coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7
      
      - name: Comment coverage on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const comment = `## ðŸ“Š Test Coverage Report
              
              | Metric | Percentage |
              |--------|------------|
              | Statements | ${coverage.statements}% |
              | Branches | ${coverage.branches}% |
              | Functions | ${coverage.functions}% |
              | Lines | ${coverage.lines}% |
              
              Coverage report generated by [Coverage workflow](${context.payload.repository.html_url}/actions/runs/${context.runId})`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not read coverage summary:', error.message);
            }